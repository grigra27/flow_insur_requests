version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: insurance_staging
      POSTGRES_USER: insurance_staging
      POSTGRES_PASSWORD: ${STAGING_DB_PASSWORD}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    restart: unless-stopped

  web:
    image: ${DOCKER_IMAGE}
    ports:
      - "8001:8000"
    environment:
      - SECRET_KEY=${STAGING_SECRET_KEY}
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=insurance_staging
      - DB_USER=insurance_staging
      - DB_PASSWORD=${STAGING_DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ALLOWED_HOSTS=${STAGING_ALLOWED_HOSTS}
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    volumes:
      - staging_media_data:/app/media
      - staging_logs_data:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py setup_user_groups &&
             python manage.py collectstatic --noinput &&
             python manage.py loaddata insurance_requests/fixtures/sample_data.json &&
             gunicorn --bind 0.0.0.0:8000 --workers 2 onlineservice.wsgi:application"

  celery:
    image: ${DOCKER_IMAGE}
    environment:
      - SECRET_KEY=${STAGING_SECRET_KEY}
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=insurance_staging
      - DB_USER=insurance_staging
      - DB_PASSWORD=${STAGING_DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - staging_media_data:/app/media
      - staging_logs_data:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: celery -A onlineservice worker -l info

volumes:
  postgres_staging_data:
  staging_media_data:
  staging_logs_data: