# Django настройки
SECRET_KEY=your-secret-key-here-change-this-in-production
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,your-server-ip,your-domain.com,www.your-domain.com

# HTTPS настройки - Enable only in production with valid SSL certificate
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_SECURE=True
SECURE_SSL_REDIRECT=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://your-server-ip

# Additional security settings for HTTPS
SECURE_CONTENT_SECURITY_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; img-src 'self' data: https: blob:; font-src 'self' data: https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; connect-src 'self' https:; media-src 'self' data: blob:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests; block-all-mixed-content;
SECURE_CONTENT_SECURITY_POLICY_ADMIN=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self'; upgrade-insecure-requests;
SECURE_CONTENT_SECURITY_POLICY_REPORT_ONLY=
SECURE_REFERRER_POLICY=strict-origin-when-cross-origin
SECURE_CROSS_ORIGIN_OPENER_POLICY=same-origin
SECURE_CROSS_ORIGIN_EMBEDDER_POLICY=
SECURE_CROSS_ORIGIN_RESOURCE_POLICY=
SECURE_SERVER_HEADER=
X_FRAME_OPTIONS=DENY
FORCE_SECURITY_HEADERS=False
CLEAR_SITE_DATA_PATHS=/logout/,/admin/logout/

# CORS Configuration
CORS_ALLOW_ALL_ORIGINS=False
CORS_ALLOWED_ORIGINS=
CORS_ALLOW_CREDENTIALS=False
CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS
CORS_ALLOWED_HEADERS=Accept,Accept-Language,Content-Language,Content-Type,Authorization,X-CSRFToken,X-Requested-With
CORS_EXPOSE_HEADERS=
CORS_MAX_AGE=86400

# База данных PostgreSQL
DB_ENGINE=django.db.backends.postgresql
DB_NAME=insurance_db
DB_USER=insurance_user
DB_PASSWORD=your-secure-database-password
DB_HOST=db
DB_PORT=5432

# Email настройки
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password

# Redis
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0
REDIS_URL=redis://redis:6379/0

# Database Performance Settings
SLOW_QUERY_THRESHOLD=0.1
LOG_ALL_QUERIES=False
LOG_QUERIES=False
DB_CONN_MAX_AGE=300
DB_MAX_CONNS=20

# Enhanced Logging Settings
SLOW_REQUEST_THRESHOLD=1.0
MEMORY_THRESHOLD=104857600
LOG_SECURITY_EVENTS=True
LOG_FILE_UPLOADS=True
LOG_PERFORMANCE_METRICS=True

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=True
QUERY_CACHE_TIMEOUT=300

# Docker Configuration
DOCKER_IMAGE=ghcr.io/grigra27/flow_insur_requests:latest

# Docker Resource Optimization
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
POSTGRES_WORK_MEM=4MB
POSTGRES_MAINTENANCE_WORK_MEM=64MB

# Container Health Check Settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=60s

# Nginx Performance Settings
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_CLIENT_MAX_BODY_SIZE=100M
NGINX_KEEPALIVE_TIMEOUT=65

# Celery Configuration
CELERY_WORKER_CONCURRENCY=2
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000
CELERY_WORKER_PREFETCH_MULTIPLIER=1

# Static File Optimization Settings
STATIC_FILE_COMPRESSION=True
STATIC_FILE_MINIFICATION=True
STATIC_FILE_VERSIONING=True
STATIC_FILE_HASH_LENGTH=8
STATIC_FILE_COMPRESSION_MIN_SIZE=1024
STATIC_FILE_INLINE_MAX_SIZE=10240
STATIC_PRELOAD_RESOURCES=css/critical.css,js/critical.js
STATIC_CDN_URL=