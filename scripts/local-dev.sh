#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/local-dev.sh

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

echo "üöÄ Starting local development environment..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "üìù Creating .env file from template..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Please edit .env file with your local settings"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo "üêç Creating Python virtual environment..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîÑ Activating virtual environment..."
source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip
echo "üì¶ Updating pip..."
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ Installing dependencies..."
pip install -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ ! -f "db.sqlite3" ]; then
    echo "üóÑÔ∏è  Setting up database..."
    python manage.py migrate
    python manage.py setup_user_groups
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo "üë§ Would you like to create a superuser? (y/n)"
    read -r create_superuser
    if [ "$create_superuser" = "y" ] || [ "$create_superuser" = "Y" ]; then
        python manage.py createsuperuser
    fi
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
    echo "üìä Would you like to load demo data? (y/n)"
    read -r load_demo
    if [ "$load_demo" = "y" ] || [ "$load_demo" = "Y" ]; then
        python manage.py loaddata insurance_requests/fixtures/sample_data.json
        echo "‚úÖ Demo data loaded!"
        echo "Demo users:"
        echo "  - Admin: admin / admin123"
        echo "  - User: user / user123"
    fi
else
    echo "üîÑ Running migrations..."
    python manage.py migrate
fi

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
echo "üìÅ Collecting static files..."
python manage.py collectstatic --noinput

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üîç Checking configuration..."
python manage.py check

echo ""
echo "‚úÖ Local development environment is ready!"
echo ""
echo "üöÄ To start the development server:"
echo "   source venv/bin/activate"
echo "   python manage.py runserver"
echo ""
echo "üåê Application will be available at: http://127.0.0.1:8000/"
echo ""
echo "üìä Useful commands:"
echo "   python manage.py shell          # Django shell"
echo "   python manage.py migrate        # Apply migrations"
echo "   python manage.py createsuperuser # Create admin user"
echo ""
echo "üê≥ To use Docker instead:"
echo "   docker-compose up -d"
echo "   # Application will be available at: http://localhost:8000/"